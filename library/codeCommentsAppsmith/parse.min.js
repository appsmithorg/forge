export const jsdocRegex=/\/\*\*([\s\S]*?)\*\//g;export const functionNameRegex=/\/\*\*([\s\S]*?)\*\/\s*([\w]+)\s*\(/g;export const descriptionRegex=/^[\s\S]*?(?=@)/;export const paramRegex=/@param\s+{([\s\S]*?)}\s+([a-zA-Z_$][0-9a-zA-Z_$]*)\s*-([\s\S]*?)(?=@|$)/g;export const returnRegex=/@returns?\s+{([\s\S]*?)}\s*-([\s\S]*?)(?=@|$)/g;export function parse(e){return(e.match(jsdocRegex)||[]).map((t=>parseComment(t,e)))}export function parseComment(e,t){const r=functionNameRegex.exec(t),n=e.match(descriptionRegex),s=[...e.matchAll(paramRegex)],o=[...e.matchAll(returnRegex)];return{functionName:r?r[2]:null,description:n?cleanDescription(n[0]):null,parameters:s.map((e=>({type:e[1].trim(),name:e[2].trim(),description:e[3].trim()}))),returns:o.map((e=>({type:e[1].trim(),description:e[2].trim()})))}}export function cleanDescription(e){return e.replace(/\/\*\*|\*\//g,"").replace(/\n\s*\* ?/g," ").trim()}export function test(){return parse(SampleCode.body)}
